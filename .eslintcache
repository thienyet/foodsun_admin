[{"F:\\FE\\food-fe\\food-admin\\src\\index.tsx":"1","F:\\FE\\food-fe\\food-admin\\src\\components\\layout\\header\\header.tsx":"2","F:\\FE\\food-fe\\food-admin\\src\\page\\delivery\\deliveryOrder\\deliveryOrder.tsx":"3","F:\\FE\\food-fe\\food-admin\\src\\components\\layout\\notFound\\notFound.tsx":"4","F:\\FE\\food-fe\\food-admin\\src\\serviceWorker.ts":"5","F:\\FE\\food-fe\\food-admin\\src\\components\\layout\\sidebar\\sidebar.tsx":"6","F:\\FE\\food-fe\\food-admin\\src\\components\\layout\\footer\\footer.tsx":"7","F:\\FE\\food-fe\\food-admin\\src\\routes\\routes.tsx":"8","F:\\FE\\food-fe\\food-admin\\src\\page\\store\\foodItemManagement\\foodItem.tsx":"9","F:\\FE\\food-fe\\food-admin\\src\\page\\customer\\customer.tsx":"10","F:\\FE\\food-fe\\food-admin\\src\\components\\PrivateRoute.tsx":"11","F:\\FE\\food-fe\\food-admin\\src\\utils\\dateTime.tsx":"12","F:\\FE\\food-fe\\food-admin\\src\\components\\PublicRoute.tsx":"13","F:\\FE\\food-fe\\food-admin\\src\\api\\authApi.ts":"14","F:\\FE\\food-fe\\food-admin\\src\\page\\account\\register\\mainRegister.tsx":"15","F:\\FE\\food-fe\\food-admin\\src\\page\\account\\register\\registerDelivery\\registerDelivery.tsx":"16","F:\\FE\\food-fe\\food-admin\\src\\api\\adminApi.ts":"17","F:\\FE\\food-fe\\food-admin\\src\\page\\account\\register\\registerRestaurant\\registerRestaurant.tsx":"18","F:\\FE\\food-fe\\food-admin\\src\\page\\headerDropdown\\DropdownAvatar.tsx":"19","F:\\FE\\food-fe\\food-admin\\src\\page\\store\\orderManagement\\orderManagement.tsx":"20","F:\\FE\\food-fe\\food-admin\\src\\page\\delivery\\delivery.tsx":"21","F:\\FE\\food-fe\\food-admin\\src\\api\\axiosClient.ts":"22","F:\\FE\\food-fe\\food-admin\\src\\page\\admin\\admin.tsx":"23","F:\\FE\\food-fe\\food-admin\\src\\page\\customerBlock\\customerBlock.tsx":"24","F:\\FE\\food-fe\\food-admin\\src\\page\\managementCategory\\Category.tsx":"25"},{"size":745,"mtime":1611199798663,"results":"26","hashOfConfig":"27"},{"size":2019,"mtime":1611199798663,"results":"28","hashOfConfig":"27"},{"size":8924,"mtime":1611199798679,"results":"29","hashOfConfig":"27"},{"size":1063,"mtime":1611199798663,"results":"30","hashOfConfig":"27"},{"size":5424,"mtime":1611199798683,"results":"31","hashOfConfig":"27"},{"size":7162,"mtime":1611199798663,"results":"32","hashOfConfig":"27"},{"size":330,"mtime":1611199798663,"results":"33","hashOfConfig":"27"},{"size":11448,"mtime":1611199798683,"results":"34","hashOfConfig":"27"},{"size":24474,"mtime":1611199798683,"results":"35","hashOfConfig":"27"},{"size":8191,"mtime":1611199798663,"results":"36","hashOfConfig":"27"},{"size":924,"mtime":1611199798663,"results":"37","hashOfConfig":"27"},{"size":200,"mtime":1611199798683,"results":"38","hashOfConfig":"27"},{"size":865,"mtime":1611199798663,"results":"39","hashOfConfig":"27"},{"size":646,"mtime":1611199798663,"results":"40","hashOfConfig":"27"},{"size":2179,"mtime":1611199798663,"results":"41","hashOfConfig":"27"},{"size":7294,"mtime":1611199798663,"results":"42","hashOfConfig":"27"},{"size":6967,"mtime":1611390547363,"results":"43","hashOfConfig":"27"},{"size":11526,"mtime":1611199798663,"results":"44","hashOfConfig":"27"},{"size":3092,"mtime":1611199798679,"results":"45","hashOfConfig":"27"},{"size":8827,"mtime":1611199798683,"results":"46","hashOfConfig":"27"},{"size":9318,"mtime":1611199798679,"results":"47","hashOfConfig":"27"},{"size":991,"mtime":1611199798663,"results":"48","hashOfConfig":"27"},{"size":16670,"mtime":1611199798663,"results":"49","hashOfConfig":"27"},{"size":8201,"mtime":1611199798679,"results":"50","hashOfConfig":"27"},{"size":15268,"mtime":1611199798679,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"12v2tr0",{"filePath":"55","messages":"56","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\FE\\food-fe\\food-admin\\src\\index.tsx",[],["116","117"],"F:\\FE\\food-fe\\food-admin\\src\\components\\layout\\header\\header.tsx",["118","119","120","121","122","123","124","125","126","127"],"import React, { useEffect, useState } from 'react';\r\nimport { Layout, Avatar, Dropdown, Menu, Badge, Row, Col } from 'antd';\r\nimport { TranslationOutlined, BellOutlined } from '@ant-design/icons';\r\nimport logo from \"../../../assets/image/logo.jpg\";\r\nimport styles from \"../header/header.module.scss\";\r\nimport DropdownAvatar from \"../../../page/headerDropdown/DropdownAvatar\";\r\nimport adminApi from \"../../../api/adminApi\";\r\n\r\nconst { Header } = Layout;\r\nfunction Topbar() {\r\n\r\n  return (\r\n    <Header\r\n      className={styles.header}\r\n      style={{ background: \"#FFFFF\" }}\r\n    > <div >\r\n        <Row className={styles.header} style={{ background: \"#FFFFFF\", position: 'fixed', top: 0, left: 0, display: 'flex', width: '100%', padding: 0, zIndex: 2 }}>\r\n          <Col span={10}>\r\n            <div style={{ position: 'relative', display: 'flex', alignItems: \"center\", marginLeft: 8 }}>\r\n              <Row\r\n                justify=\"center\"\r\n              >\r\n                <Col style={{ paddingLeft: 20 }}>\r\n                  <a href=\"#\">\r\n                    <img alt=\"\" className={styles.image} src={logo} />\r\n                  </a>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </Col>\r\n          <Col span={6} offset={8}>\r\n            <div style={{ position: 'relative', display: 'flex', float: 'right', alignItems: \"center\", marginRight: 48 }}>\r\n              <Row>\r\n                {/* <span className={styles.container} style={{ marginRight: 15 }} >\r\n                  <Badge count={15} style={{}}>\r\n                    <Avatar style={{ backgroundColor: \"#FFFFFF\", marginLeft: 5, marginRight: 5, cursor: \"pointer\" }} icon={<BellOutlined style={{ fontSize: '18px', color: '#000000' }} />} />\r\n                  </Badge>\r\n                </span> */}\r\n              </Row>\r\n              <Row>\r\n                <DropdownAvatar key=\"avatar\" />\r\n              </Row>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </Header >\r\n  );\r\n}\r\n\r\nexport default Topbar;",["128","129"],"F:\\FE\\food-fe\\food-admin\\src\\page\\delivery\\deliveryOrder\\deliveryOrder.tsx",["130","131","132","133","134","135"],"import React, { useState, useEffect } from \"react\";\r\nimport styles from \"../deliveryOrder/deliveryOrder.module.scss\";\r\nimport adminApi from \"../../../api/adminApi\";\r\nimport { AudioOutlined } from '@ant-design/icons';\r\nimport { DatePicker, Input, notification } from 'antd';\r\nimport { Card, Table, Space, Tag, PageHeader, Switch, Popconfirm } from 'antd';\r\nimport axios from \"axios\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst Order = () => {\r\n\r\n    const [deliveryOrderData, setDeliveryOrderData] = useState<any>([]);\r\n    const [userData, setUserData] = useState<any>();\r\n    const [page, setPage] = useState<any>(1);\r\n \r\n    const columns = [\r\n        {\r\n            title: 'STT',\r\n            dataIndex: 'id',\r\n            key: 'index',\r\n            render: (value: any, item: any, index: any) => (\r\n                (page - 1) * 10 + (index + 1)\r\n            ),\r\n        },\r\n        {\r\n            title: 'Thời Gian',\r\n            dataIndex: 'timestamp',\r\n            key: 'timestamp'\r\n        },\r\n        {\r\n            title: 'Phương Thức Thanh Toán',\r\n            dataIndex: 'paymentMode',\r\n            key: 'paymentMode',\r\n        },\r\n        {\r\n            title: 'Trạng Thái',\r\n            dataIndex: 'orderStatus',\r\n            key: 'orderStatus',\r\n        },\r\n        {\r\n            title: 'Tổng Tiền',\r\n            dataIndex: 'totalPrice',\r\n            key: 'totalPrice',\r\n            render: (value: any, item: any, index: any) => (\r\n                <p>{value.toLocaleString('it-IT', { style: 'currency', currency: 'VND' })}</p>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Địa Chỉ',\r\n            dataIndex: 'deliveryAddress',\r\n            key: 'deliveryAddress',\r\n        },\r\n        {\r\n            title: '',\r\n            dataIndex: 'orderStatus',\r\n            key: 'id',\r\n            render: (text: any, record: any) => (\r\n                <Space size=\"middle\">\r\n                    {\r\n                        record.orderStatus === \"preparing\" ? <div>\r\n                            <Popconfirm\r\n                                title=\"Bạn có muốn thực hiện không?\"\r\n                                onConfirm={() => handleApprove(record.id)}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n\r\n                                <p style={{ marginTop: 10, cursor: \"pointer\", color: \"#00BFFF\" }}\r\n                                >Picked up</p>\r\n                            </Popconfirm>\r\n                        </div> : record.orderStatus === \"picked up\" ?\r\n                            <Popconfirm\r\n                                title=\"Bạn có muốn thực hiện không?\"\r\n                                onConfirm={() => handleUnApprove(record.id)}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n\r\n                                <p style={{ marginTop: 10, cursor: \"pointer\", color: \"#00BFFF\" }}\r\n                                >Delivered</p>\r\n                            </Popconfirm> : \"\"\r\n                    }\r\n\r\n                </Space>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    //get toàn bộ data nhà hàng\r\n    const fetchDeliveryOrder = async () => {\r\n        let email = localStorage.getItem(\"email\");\r\n        const dataUser = await adminApi.getProfileDelivery(email);\r\n        console.log(dataUser.data.id);\r\n        setUserData(dataUser.data.id);\r\n\r\n        try {\r\n            const response = await adminApi.getOrdersByDeliveryId(dataUser.data.id);\r\n            console.log(response);\r\n            setDeliveryOrderData(response.data.content);\r\n            console.log(response);\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    const handleApprove = async (id: string) => {\r\n        console.log(\"data\" + id);\r\n        let email = localStorage.getItem(\"email\");\r\n        const dataUser = await adminApi.getProfileDelivery(email);\r\n        console.log(dataUser.data.id);\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            axios.request({\r\n                method: 'PUT',\r\n                url: \"http://localhost:8085/deliveryguys/\" + dataUser.data.id + '/orders/' + id,\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                },\r\n                data: {\r\n                    orderStatus: \"picked up\",\r\n                },\r\n\r\n            }).then(response => {\r\n                console.log(response)\r\n                if (response === undefined) {\r\n                    notification[\"error\"]({\r\n                        message: \"Thông báo\",\r\n                        description: \"Không thành công\",\r\n\r\n                    });\r\n                }\r\n                else {\r\n                    notification[\"success\"]({\r\n                        message: \"Thông báo\",\r\n                        description: \"Thành công\",\r\n                    });\r\n                    fetchDeliveryOrder();\r\n                }\r\n            }\r\n            );\r\n            fetchDeliveryOrder();\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    const handleUnApprove = async (id: string) => {\r\n        console.log(\"data\" + id);\r\n        let email = localStorage.getItem(\"email\");\r\n        const dataUser = await adminApi.getProfileDelivery(email);\r\n        console.log(dataUser.data.id);\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            axios.request({\r\n                method: 'PUT',\r\n                url: \"http://localhost:8085/deliveryguys/\" + dataUser.data.id + '/orders/' + id,\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                },\r\n                data: {\r\n                    orderStatus: \"delivered\",\r\n                },\r\n\r\n            }).then(response => {\r\n                console.log(response)\r\n                if (response === undefined) {\r\n                    notification[\"error\"]({\r\n                        message: \"Thông báo\",\r\n                        description: \"Không thành công\",\r\n\r\n                    });\r\n                }\r\n                else {\r\n                    notification[\"success\"]({\r\n                        message: \"Thông báo\",\r\n                        description: \"Thành công\",\r\n                    });\r\n                    fetchDeliveryOrder();\r\n                }\r\n            }\r\n            );\r\n            fetchDeliveryOrder();\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    const onSearchByAddress = async (value: string) => {\r\n        console.log(\"input\" + value);\r\n        if (value === '') {\r\n            fetchDeliveryOrder();\r\n        } else {\r\n            try {\r\n                const pageformat = {\r\n                    page: 1,\r\n                    size: 1000\r\n                }\r\n                const response = await adminApi.getAllRestaurantByAddress(value, pageformat);\r\n                setDeliveryOrderData(response.data.content);\r\n                console.log(response);\r\n            } catch (error) {\r\n                throw error;\r\n            }\r\n            console.log(value);\r\n        }\r\n    }\r\n\r\n    const onChangeDate = async (date: any, dateString: any) => {\r\n        let email = \"leminh@gmail.com\";\r\n        const dataUser = await adminApi.getProfileDelivery(email);\r\n        console.log(dataUser.data.id);\r\n        setUserData(dataUser.data.id);\r\n\r\n        if (dateString === '') {\r\n            fetchDeliveryOrder();\r\n        } else {\r\n            try {\r\n                const response = await adminApi.getOrdersByDeliveryIdAndDate(dataUser.data.id, dateString);\r\n                setDeliveryOrderData(response.data.content);\r\n                console.log(response);\r\n            } catch (error) {\r\n                throw error;\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchDeliveryOrder();\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div id={styles.dialog}>\r\n                <PageHeader\r\n                    title=\"\"\r\n                    subTitle=\"\"\r\n\r\n                >\r\n                    <DatePicker\r\n                        placeholder=\"Chọn ngày tạo\"\r\n                        allowClear\r\n                        onChange={onChangeDate}\r\n                        style={{ width: 400, marginBottom: 10, marginLeft: 20 }}\r\n                    />\r\n\r\n                </PageHeader>\r\n            </div>\r\n            <div id={styles.container}>\r\n                <Card title=\"Quản Lý Đặt Hàng\" bordered={false} >\r\n                    <Table columns={columns} dataSource={deliveryOrderData} pagination={{\r\n                        onChange(current) {\r\n                          setPage(current);\r\n                        }\r\n                      }}/>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Order;","F:\\FE\\food-fe\\food-admin\\src\\components\\layout\\notFound\\notFound.tsx",[],["136","137"],"F:\\FE\\food-fe\\food-admin\\src\\serviceWorker.ts",[],"F:\\FE\\food-fe\\food-admin\\src\\components\\layout\\sidebar\\sidebar.tsx",["138","139","140","141","142","143"],"import React, { useEffect, useState } from 'react';\r\nimport { Layout, Menu } from 'antd';\r\nimport {\r\n  UserOutlined, SolutionOutlined, ProfileOutlined, DashboardOutlined,\r\n  ProjectOutlined, HomeOutlined, IdcardOutlined, ReconciliationOutlined\r\n} from '@ant-design/icons';\r\n\r\nimport styles from \"../sidebar/sidebar.module.scss\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { parseJwt } from '../../../utils/common';\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Sider } = Layout;\r\n\r\nfunction Sidebar() {\r\n\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const [roles, setRoles] = useState<any>();\r\n\r\n  const menuSidebarAdmin = [\r\n    {\r\n      key: \"restaurant-management\",\r\n      title: \"Quản Lý Nhà Hàng\",\r\n      link: \"/restaurant-management\",\r\n      icon: <HomeOutlined />\r\n    },\r\n    {\r\n      key: \"customer\",\r\n      title: \"Quản Lý Khách hàng\",\r\n      link: \"/customer\",\r\n      icon: <SolutionOutlined />\r\n    },\r\n    {\r\n      key: \"delivery\",\r\n      title: \"Quản Lý Vận chuyển\",\r\n      link: \"/delivery\",\r\n      icon: <ProfileOutlined />\r\n    },\r\n    {\r\n      key: \"management-admin\",\r\n      title: \"Quản Lý Admin\",\r\n      link: \"/management-admin\",\r\n      icon: <UserOutlined />\r\n    },\r\n    {\r\n      key: \"management-category\",\r\n      title: \"Quản Lý Danh Mục\",\r\n      link: \"/management-category\",\r\n      icon: <IdcardOutlined />\r\n    }\r\n  ];\r\n\r\n  const menuDeliveryGuys = [\r\n    {\r\n      key: \"delivery-order\",\r\n      title: \"Quản Lý Vận Chuyển\",\r\n      link: \"/delivery-order\",\r\n      icon: <IdcardOutlined />\r\n    }\r\n  ];\r\n\r\n  const menuRestaurant = [\r\n    {\r\n      key: \"restaurant-order\",\r\n      title: \"Quản Lý Đặt Hàng\",\r\n      link: \"/restaurant-order\",\r\n      icon: <UserOutlined />\r\n    },\r\n    {\r\n      key: \"management-food\",\r\n      title: \"Quản Lý Thực Đơn\",\r\n      link: \"/management-food\",\r\n      icon: <IdcardOutlined />\r\n    }\r\n  ];\r\n\r\n\r\n  const navigate = (link: string, key: string) => {\r\n    history.push(link);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setRoles(localStorage.getItem(\"roles\"));\r\n  })\r\n\r\n  return (\r\n    <Sider\r\n      className={'ant-layout-sider-trigger'}\r\n      width={230}\r\n      style={{\r\n        position: \"fixed\",\r\n        top: 60,\r\n        height: '100%',\r\n        left: 0,\r\n        padding: 0,\r\n        zIndex: 1,\r\n        marginTop: 0,\r\n        backgroundColor: \"#FFFFFF\",\r\n        boxShadow: \" 0 2px 4px 0 rgba(0,0,0,0.2)\"\r\n      }}\r\n    >\r\n      {roles === \"ADMIN\" ?\r\n        <Menu mode=\"inline\"\r\n          selectedKeys={location.pathname.split(\"/\")}\r\n          defaultOpenKeys={['account']}\r\n          style={{ height: '100%', borderRight: 0, backgroundColor: \"#fafafa\" }}>\r\n          <Menu.Item\r\n            icon={<DashboardOutlined />}\r\n            key=\"dashboard\"\r\n            onClick={() => navigate(\"/dashboard\", \"dashboard\")}>\r\n            Bảng Điều Khiển\r\n          </Menu.Item>\r\n          <SubMenu key=\"sub1\" icon={<HomeOutlined />} title=\"Quản Lý Nhà Hàng\">\r\n            <Menu.Item\r\n              key=\"restaurant-management\"\r\n              onClick={() => navigate(\"/restaurant-management\", \"restaurant-management\")}>\r\n              Nhà Hàng Hoạt Động\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              key=\"restaurant-management-block\"\r\n              onClick={() => navigate(\"/restaurant-management-block\", \"restaurant-management-block\")}>\r\n              Nhà Hàng Không Hoạt Động\r\n            </Menu.Item>\r\n          </SubMenu>\r\n\r\n          <SubMenu key=\"sub2\" icon={<SolutionOutlined />} title=\"Quản Lý Khách hàng\">\r\n            <Menu.Item\r\n              key=\"customer\"\r\n              onClick={() => navigate(\"/customer\", \"customer\")}>\r\n              Tài Khoản Hoạt Động\r\n           </Menu.Item>\r\n            <Menu.Item\r\n              key=\"customer-block\"\r\n              onClick={() => navigate(\"/customer-block\", \"customer-block\")}>\r\n              Tài Khoản Không Hoạt Động\r\n           </Menu.Item>\r\n          </SubMenu>\r\n\r\n          <SubMenu key=\"sub3\" icon={<UserOutlined />} title=\"Quản Lý Admin\">\r\n            <Menu.Item\r\n              key=\"management-admin\"\r\n              onClick={() => navigate(\"/management-admin\", \"management-admin\")}>\r\n              Tài Khoản Hoạt Động\r\n          </Menu.Item>\r\n            <Menu.Item\r\n              key=\"management-admin-block\"\r\n              onClick={() => navigate(\"/management-admin-block\", \"management-admin-block\")}>\r\n              Tài Khoản Không Hoạt Động\r\n          </Menu.Item>\r\n          </SubMenu>\r\n          <SubMenu key=\"sub4\" icon={<ReconciliationOutlined />} title=\"Quản Lý Vận chuyển\">\r\n            <Menu.Item\r\n              key=\"delivery\"\r\n              onClick={() => navigate(\"/delivery\", \"delivery\")}>\r\n              Tài Khoản Hoạt Động\r\n          </Menu.Item>\r\n            <Menu.Item\r\n              key=\"delivery-block\"\r\n              onClick={() => navigate(\"/delivery-block\", \"delivery-block\")}>\r\n              Tài Khoản Không Hoạt Động\r\n            </Menu.Item>\r\n          </SubMenu>\r\n          <Menu.Item\r\n            icon={<IdcardOutlined />}\r\n            key=\"management-category\"\r\n            onClick={() => navigate(\"/management-category\", \"management-category\")}>\r\n            Quản Lý Danh Mục\r\n          </Menu.Item>\r\n        </Menu>\r\n        :\r\n\r\n        roles === \"RESTAURANT\" ?\r\n          <Menu mode=\"inline\"\r\n            selectedKeys={location.pathname.split(\"/\")}\r\n            defaultOpenKeys={['account']}\r\n            style={{ height: '100%', borderRight: 0, backgroundColor: \"#fafafa\" }}>\r\n            <Menu.Item\r\n              icon={<DashboardOutlined />}\r\n              key=\"dashboard\"\r\n              onClick={() => navigate(\"/dashboard\", \"dashboard\")}>\r\n              Bảng Điều Khiển\r\n          </Menu.Item>\r\n            <Menu.Item\r\n              icon={<IdcardOutlined />}\r\n              key=\"restaurant-order\"\r\n              onClick={() => navigate(\"/restaurant-order\", \"restaurant-order\")}>\r\n              Quản Lý Đặt Hàng\r\n            </Menu.Item>\r\n            <Menu.Item\r\n              icon={<ProjectOutlined />}\r\n              key=\"management-food\"\r\n              onClick={() => navigate(\"/management-food\", \"management-food\")}>\r\n              Quản Lý Thực Đơn\r\n            </Menu.Item>\r\n          </Menu>\r\n          :\r\n          <Menu mode=\"inline\"\r\n            selectedKeys={location.pathname.split(\"/\")}\r\n            defaultOpenKeys={['account']}\r\n            style={{ height: '100%', borderRight: 0, backgroundColor: \"#fafafa\" }}>\r\n            <Menu.Item\r\n              icon={<DashboardOutlined />}\r\n              key=\"dashboard\"\r\n              onClick={() => navigate(\"/dashboard\", \"dashboard\")}>\r\n              Bảng Điều Khiển\r\n          </Menu.Item>\r\n            <Menu.Item\r\n              icon={<IdcardOutlined />}\r\n              key=\"delivery-order\"\r\n              onClick={() => navigate(\"/delivery-order\", \"delivery-order\")}>\r\n              Quản Lý Vận Chuyển\r\n            </Menu.Item>\r\n          </Menu>\r\n      }\r\n\r\n    </Sider >\r\n  );\r\n}\r\n\r\nexport default Sidebar;",["144","145"],"F:\\FE\\food-fe\\food-admin\\src\\components\\layout\\footer\\footer.tsx",[],"F:\\FE\\food-fe\\food-admin\\src\\routes\\routes.tsx",[],["146","147"],"F:\\FE\\food-fe\\food-admin\\src\\page\\store\\foodItemManagement\\foodItem.tsx",["148","149","150","151","152","153","154","155"],"import React, { useState, useEffect } from \"react\";\r\nimport styles from \"../foodItemManagement/foodItem.module.scss\";\r\nimport adminApi from \"../../../api/adminApi\";\r\nimport { AudioOutlined } from '@ant-design/icons';\r\nimport { DatePicker, Input, Popconfirm } from 'antd';\r\nimport { Card, Table, Space, Tag, PageHeader, notification, Switch, Form, Row, Col, Spin, Modal, Button } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport axiosClient from \"../../../api/axiosClient\";\r\n\r\nconst { Search } = Input;\r\nconst { TextArea } = Input;\r\n\r\nconst FoodItem = () => {\r\n\r\n    const [foodItem, setFoodItem] = useState<any>([]);\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [isModalVisibleEdit, setIsModalVisibleEdit] = useState(false);\r\n    const [isModalVisibleEditProduct, setIsModalVisibleEditProduct] = useState(false);\r\n    const [loading, setLoading] = useState(true);\r\n    const [image, setImage] = useState<any>();\r\n\r\n    const [form] = Form.useForm();\r\n    const [form1] = Form.useForm();\r\n    const [form2] = Form.useForm();\r\n    const [page, setPage] = useState<any>(1);\r\n\r\n    const columns = [\r\n        {\r\n            title: 'STT',\r\n            dataIndex: 'id',\r\n            key: 'index',\r\n            render: (value: any, item: any, index: any) => (\r\n                (page - 1) * 10 + (index + 1)\r\n            ),\r\n        },\r\n        {\r\n            title: 'Ảnh',\r\n            dataIndex: 'image',\r\n            key: 'image',\r\n            width: '20%',\r\n            render: (image: any) => <img style={{ width: 50, height: 40 }} src={image} />\r\n        },\r\n        {\r\n            title: 'Tên Món',\r\n            dataIndex: 'name',\r\n            key: 'name'\r\n        },\r\n        {\r\n            title: 'Giá',\r\n            dataIndex: 'price',\r\n            key: 'price',\r\n            render: (value: any, item: any, index: any) => (\r\n                <p>{value.toLocaleString('it-IT', { style: 'currency', currency: 'VND' })}</p>\r\n            ),\r\n        },\r\n        {\r\n            title: '',\r\n            dataIndex: 'description',\r\n            key: 'id',\r\n            render: (id: any, description: any) => (\r\n                <Space size=\"middle\">\r\n                    <Button type=\"primary\" onClick={() => handleEdit(description)}>Sửa Ảnh</Button>\r\n                    <Button type=\"primary\" onClick={() => handleEditProduct(description)}>Sửa Sản Phẩm</Button>\r\n\r\n                    <Popconfirm\r\n                        title=\"Bạn có muốn thực hiện không?\"\r\n                        onConfirm={() => handleDelete(description)}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" danger >Xóa</Button>\r\n                    </Popconfirm>\r\n                </Space>\r\n            ),\r\n        }\r\n    ];\r\n\r\n    //get toàn bộ data nhà hàng\r\n    const fetchFoodItem = async (page: any, size: any) => {\r\n        let email = localStorage.getItem(\"email\");\r\n        const dataUser = await adminApi.getProfileRestaurant(email);\r\n        console.log(dataUser.data.id);\r\n\r\n        try {\r\n            const pageformat = {\r\n                page: 1,\r\n                size: 1000\r\n            }\r\n            const response = await adminApi.getFoodItemsByRestaurantId(dataUser.data.id, pageformat);\r\n            console.log(response);\r\n            setFoodItem(response.data.content);\r\n            console.log(response);\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    const onSearchByName = async (value: string) => {\r\n        console.log(\"input\" + value);\r\n        let email = localStorage.getItem(\"email\");\r\n        const dataUser = await adminApi.getProfileRestaurant(email);\r\n        console.log(dataUser.data.id);\r\n        if (value === '') {\r\n            fetchFoodItem(1, 1000);\r\n        } else {\r\n            try {\r\n                const pageformat = {\r\n                    page: 1,\r\n                    size: 1000\r\n                }\r\n                const response = await adminApi.getFoodItemsByName(value, pageformat, dataUser.data.id);\r\n                setFoodItem(response.data.content);\r\n                console.log(response);\r\n            } catch (error) {\r\n                throw error;\r\n            }\r\n            console.log(value);\r\n        }\r\n    }\r\n\r\n    const onCreate = async (values: any) => {\r\n        let email = localStorage.getItem(\"email\");\r\n        const dataUser = await adminApi.getProfileRestaurant(email);\r\n        console.log(dataUser.data.id);\r\n\r\n        console.log(values)\r\n        try {\r\n            const jsonfy = {\r\n                name: values.name,\r\n                price: values.price,\r\n                isDeleted: false\r\n            }\r\n\r\n            const formatData = {\r\n                \"file\": values.image\r\n            }\r\n            var formData = new FormData();\r\n            formData.append(\"file\", image);\r\n            formData.append(\"dto\", JSON.stringify(jsonfy));\r\n            await axiosClient.post(\"http://localhost:8085/restaurants/\" + dataUser.data.id + \"/fooditems/add\", formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }).then(response => {\r\n                if (response === undefined) {\r\n                    notification[\"error\"]({\r\n                        message: \"Thông báo\",\r\n                        description: \"Tạo món ăn không thành công\",\r\n\r\n                    });\r\n                }\r\n                else {\r\n                    notification[\"success\"]({\r\n                        message: \"Thông báo\",\r\n                        description: \"Tạo món ăn thành công\",\r\n\r\n                    });\r\n                }\r\n            }\r\n            );\r\n\r\n            // await axiosClient.post(\"http://localhost:8085/upload\", formatData)\r\n            // .then(response => {\r\n            //     if (response === undefined) {\r\n            //         notification[\"error\"]({\r\n            //             message: \"Thông báo\",\r\n            //             description: \"Tạo món ăn không thành công\",\r\n\r\n            //         });\r\n            //     }\r\n            //     else {\r\n            //         notification[\"success\"]({\r\n            //             message: \"Thông báo\",\r\n            //             description: \"Tạo món ăn thành công\",\r\n\r\n            //         });\r\n            //     }\r\n            // }\r\n            // );\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n        setTimeout(function () {\r\n            setLoading(false);\r\n            setIsModalVisible(false);\r\n            fetchFoodItem(1, 1000);\r\n        }, 1000);\r\n    }\r\n\r\n    const handleEdit = async (values: any) => {\r\n        try {\r\n            form1.setFieldsValue(values);\r\n            setLoading(false);\r\n            setIsModalVisibleEdit(true);\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    const handleEditProduct = async (values: any) => {\r\n        try {\r\n            form2.setFieldsValue(values);\r\n            setLoading(false);\r\n            setIsModalVisibleEditProduct(true);\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    const handleDelete = async (description: any) => {\r\n        console.log(description.id);\r\n        try {\r\n            await axiosClient.put(\"http://localhost:8085/restaurants/fooditems/delete/\" + description.id)\r\n                .then(response => {\r\n                    if (response === undefined) {\r\n                        notification[\"error\"]({\r\n                            message: \"Thông báo\",\r\n                            description: \"Xóa không thành công\",\r\n\r\n                        });\r\n                    }\r\n                    else {\r\n                        notification[\"success\"]({\r\n                            message: \"Thông báo\",\r\n                            description: \"Xóa thành công\",\r\n\r\n                        });\r\n                    }\r\n                }\r\n                );\r\n            fetchFoodItem(1, 1000);\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    const handleChange = (event: any) => {\r\n        console.log(event.target.files[0])\r\n        setImage(event.target.files[0])\r\n    }\r\n\r\n    const onUpdateImage = async (values: any) => {\r\n        console.log(values)\r\n        try {\r\n            const jsonfy = {\r\n                name: values.name,\r\n                price: values.price,\r\n                isDeleted: false\r\n            }\r\n            var formData = new FormData();\r\n            formData.append(\"file\", image);\r\n            //formData.append(\"dto\", JSON.stringify(jsonfy));\r\n            await axiosClient.put(\"http://localhost:8085/restaurants/fooditems/edit/image/\" + values.id, formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }).then(response => {\r\n                if (response === undefined) {\r\n                    notification[\"error\"]({\r\n                        message: \"Thông báo\",\r\n                        description: \"Cập nhật món ăn không thành công\",\r\n\r\n                    });\r\n                }\r\n                else {\r\n                    notification[\"success\"]({\r\n                        message: \"Thông báo\",\r\n                        description: \"Cập nhật món ăn thành công\",\r\n\r\n                    });\r\n                }\r\n            }\r\n            );\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n        setTimeout(function () {\r\n            setLoading(false);\r\n            setIsModalVisibleEdit(false);\r\n            setIsModalVisibleEditProduct(false);\r\n            fetchFoodItem(1, 1000);\r\n        }, 1000);\r\n    }\r\n\r\n    const onUpdateData = async (values: any) => {\r\n        console.log(values)\r\n        try {\r\n            const jsonfy = {\r\n                name: values.name,\r\n                price: values.price,\r\n                isDeleted: false\r\n            }\r\n            await axiosClient.put(\"http://localhost:8085/restaurants/fooditems/edit/\" + values.id, jsonfy,\r\n            ).then(response => {\r\n                if (response === undefined) {\r\n                    notification[\"error\"]({\r\n                        message: \"Thông báo\",\r\n                        description: \"Cập nhật món ăn không thành công\",\r\n\r\n                    });\r\n                }\r\n                else {\r\n                    notification[\"success\"]({\r\n                        message: \"Thông báo\",\r\n                        description: \"Cập nhật món ăn thành công\",\r\n\r\n                    });\r\n                }\r\n            }\r\n            );\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n        setTimeout(function () {\r\n            setLoading(false);\r\n            setIsModalVisibleEdit(false);\r\n            setIsModalVisibleEditProduct(false);\r\n            fetchFoodItem(1, 1000);\r\n        }, 1000);\r\n    }\r\n\r\n\r\n    const showModal = () => {\r\n        setIsModalVisible(true);\r\n        setLoading(false);\r\n    };\r\n\r\n    const onCancel = () => {\r\n        setIsModalVisible(false);\r\n        setLoading(false);\r\n    };\r\n\r\n    const onCancelEdit = () => {\r\n        setIsModalVisibleEdit(false);\r\n        setIsModalVisibleEditProduct(false);\r\n        setLoading(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchFoodItem(1, 1000);\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div id={styles.dialog}>\r\n                <PageHeader\r\n                    title=\"\"\r\n                    subTitle=\"\"\r\n\r\n                >\r\n                    <Row>\r\n                        <Button icon={<PlusOutlined />} onClick={showModal} shape=\"round\" size=\"middle\" style={{ marginBottom: 5, backgroundColor: '#24a0ed', color: \"#FFFFFF\", marginRight: 20 }} >Thêm Mới</Button>\r\n                        <Modal title=\"Tạo Món Ăn\" visible={isModalVisible}\r\n                            onCancel={onCancel}\r\n                            onOk={() => {\r\n                                form\r\n                                    .validateFields()\r\n                                    .then((values) => {\r\n                                        form.resetFields();\r\n                                        onCreate(values)\r\n\r\n\r\n                                    })\r\n                                    .catch((info) => {\r\n                                        console.log('Validate Failed:', info);\r\n                                    });\r\n                            }}\r\n                        >\r\n                            <Spin spinning={loading}>\r\n                                <Form\r\n                                    form={form}\r\n                                    name=\"createRecruitment\"\r\n                                    layout=\"vertical\"\r\n                                    initialValues={{\r\n                                        modifier: 'public',\r\n                                    }}\r\n                                    scrollToFirstError\r\n                                >\r\n                                    <Form.Item\r\n                                        name=\"name\"\r\n                                        label=\"Tên Món Ăn\"\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Vui lòng nhập tên món ăn!',\r\n                                            },\r\n                                            {\r\n                                                max: 255,\r\n                                                message: \"Vui lòng nhập dưới 255 ký tự\",\r\n                                            },\r\n                                        ]}\r\n                                        style={{ marginBottom: 10 }}\r\n                                    >\r\n                                        <TextArea\r\n                                            placeholder=\"Tên Món Ăn\"\r\n                                            autoSize={{ minRows: 3, maxRows: 5 }}\r\n                                        />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        name=\"price\"\r\n                                        label=\"Giá\"\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Vui lòng nhập giá!',\r\n                                            },\r\n                                        ]}\r\n                                        style={{ marginBottom: 10 }}\r\n                                    >\r\n                                        <Input placeholder=\"Giá\" />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        name=\"image\"\r\n                                        label=\"Ảnh\"\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Vui lòng nhập ảnh!',\r\n                                            },\r\n                                        ]}\r\n                                        style={{ marginBottom: 10 }}\r\n                                    >\r\n                                        <input type=\"file\" onChange={handleChange}\r\n                                            id=\"avatar\" name=\"file\"\r\n                                            accept=\"image/png, image/jpeg\" />\r\n                                    </Form.Item>\r\n\r\n                                </Form>\r\n                            </Spin>\r\n                        </Modal>\r\n                        <Modal title=\"Sửa Món Ăn\" visible={isModalVisibleEdit}\r\n                            onCancel={onCancelEdit}\r\n                            onOk={() => {\r\n                                form1\r\n                                    .validateFields()\r\n                                    .then((values) => {\r\n                                        form1.resetFields();\r\n                                        onUpdateImage(values)\r\n                                    })\r\n                                    .catch((info) => {\r\n                                        console.log('Validate Failed:', info);\r\n                                    });\r\n                            }}\r\n                        >\r\n                            <Spin spinning={loading}>\r\n                                <Form\r\n                                    form={form1}\r\n                                    name=\"createRecruitment\"\r\n                                    layout=\"vertical\"\r\n                                    initialValues={{\r\n                                        modifier: 'public',\r\n                                    }}\r\n                                    scrollToFirstError\r\n                                >\r\n                                    <Form.Item\r\n                                        name=\"id\"\r\n                                        label=\"ID\"\r\n                                        style={{ marginBottom: 10 }}\r\n                                    >\r\n                                        <Input placeholder=\"ID\" disabled={true} />\r\n                                    </Form.Item>\r\n\r\n                                    {/* <Form.Item\r\n                                        name=\"name\"\r\n                                        label=\"Tên Món Ăn\"\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Vui lòng nhập tên món ăn!',\r\n                                            },\r\n                                            {\r\n                                                max: 255,\r\n                                                message: \"Vui lòng nhập dưới 255 ký tự\",\r\n                                            },\r\n                                        ]}\r\n                                        style={{ marginBottom: 10 }}\r\n                                    >\r\n                                        <TextArea\r\n                                            placeholder=\"Tên Món Ăn\"\r\n                                            autoSize={{ minRows: 3, maxRows: 5 }}\r\n                                        />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        name=\"price\"\r\n                                        label=\"Giá\"\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Vui lòng nhập giá!',\r\n                                            },\r\n                                        ]}\r\n                                        style={{ marginBottom: 10 }}\r\n                                    >\r\n                                        <Input placeholder=\"Giá\" />\r\n                                    </Form.Item> */}\r\n\r\n                                </Form>\r\n                                <input type=\"file\" onChange={handleChange}\r\n                                    id=\"avatar\" name=\"file\"\r\n                                    accept=\"image/png, image/jpeg\" />\r\n                            </Spin>\r\n                        </Modal>\r\n                        <Modal title=\"Sửa Món Ăn\" visible={isModalVisibleEditProduct}\r\n                            onCancel={onCancelEdit}\r\n                            onOk={() => {\r\n                                form2\r\n                                    .validateFields()\r\n                                    .then((values) => {\r\n                                        form2.resetFields();\r\n                                        onUpdateData(values)\r\n                                    })\r\n                                    .catch((info) => {\r\n                                        console.log('Validate Failed:', info);\r\n                                    });\r\n                            }}\r\n                        >\r\n                            <Spin spinning={loading}>\r\n                                <Form\r\n                                    form={form2}\r\n                                    name=\"createRecruitment\"\r\n                                    layout=\"vertical\"\r\n                                    initialValues={{\r\n                                        modifier: 'public',\r\n                                    }}\r\n                                    scrollToFirstError\r\n                                >\r\n                                    <Form.Item\r\n                                        name=\"id\"\r\n                                        label=\"ID\"\r\n                                        style={{ marginBottom: 10 }}\r\n                                    >\r\n                                        <Input placeholder=\"ID\" disabled={true} />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        name=\"name\"\r\n                                        label=\"Tên Món Ăn\"\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Vui lòng nhập tên món ăn!',\r\n                                            },\r\n                                            {\r\n                                                max: 255,\r\n                                                message: \"Vui lòng nhập dưới 255 ký tự\",\r\n                                            },\r\n                                        ]}\r\n                                        style={{ marginBottom: 10 }}\r\n                                    >\r\n                                        <TextArea\r\n                                            placeholder=\"Tên Món Ăn\"\r\n                                            autoSize={{ minRows: 3, maxRows: 5 }}\r\n                                        />\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        name=\"price\"\r\n                                        label=\"Giá\"\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Vui lòng nhập giá!',\r\n                                            },\r\n                                        ]}\r\n                                        style={{ marginBottom: 10 }}\r\n                                    >\r\n                                        <Input placeholder=\"Giá\" />\r\n                                    </Form.Item>\r\n\r\n                                </Form>\r\n                            </Spin>\r\n                        </Modal>\r\n                    </Row>\r\n                    <Search\r\n                        placeholder=\"Nhập tên món\"\r\n                        allowClear\r\n                        onSearch={onSearchByName}\r\n                        style={{ width: 400, marginBottom: 10, marginTop: 10 }}\r\n                    />\r\n\r\n                </PageHeader>\r\n            </div>\r\n            <div id={styles.container}>\r\n                <Card title=\"Quản Lý Thực Đơn\" bordered={false} >\r\n                    <Table\r\n                        style={{ color: \"#FFFFFF\" }}\r\n                        columns={columns}\r\n                        dataSource={foodItem}\r\n                        pagination={{\r\n                            onChange(current) {\r\n                                setPage(current);\r\n                            }\r\n                        }} />\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FoodItem;",["156","157"],"F:\\FE\\food-fe\\food-admin\\src\\page\\customer\\customer.tsx",["158","159","160","161","162","163","164","165"],"import React, { useState, useEffect } from \"react\";\r\nimport styles from \"../customer/customer.module.scss\";\r\nimport adminApi from \"../../api/adminApi\";\r\nimport { DatePicker, Input, notification, Popconfirm } from 'antd';\r\nimport { Card, Table, Space, Tag, PageHeader, Switch } from 'antd';\r\n\r\nconst { Search } = Input;\r\n\r\nconst Customer = () => {\r\n\r\n    const [customer, setCustomer] = useState<any>([]);\r\n    const [page, setPage] = useState<any>(1);\r\n\r\n    const columns = [\r\n        {\r\n            title: 'STT',\r\n            dataIndex: 'id',\r\n            key: 'index',\r\n            render: (value: any, item: any, index: any) => (\r\n                (page - 1) * 10 + (index + 1)\r\n            ),\r\n        },\r\n        {\r\n            title: 'Họ Và Tên',\r\n            dataIndex: 'name',\r\n            key: 'name'\r\n        },\r\n        {\r\n            title: 'Số Điện Thoại',\r\n            dataIndex: 'phoneNo',\r\n            key: 'phoneNo',\r\n        },\r\n        {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n            key: 'email',\r\n        },\r\n        {\r\n            title: 'Địa Chỉ',\r\n            dataIndex: 'address',\r\n            key: 'address',\r\n        },\r\n        {\r\n            title: 'Ngày Tạo',\r\n            dataIndex: 'createDate',\r\n            key: 'createDate',\r\n        },\r\n        {\r\n            title: 'Trạng thái',\r\n            dataIndex: 'isActive',\r\n            key: 'isActive',\r\n            render: (isActive: any) => (\r\n                <Space size=\"middle\">\r\n                    {\r\n                        isActive === true ? <Tag color=\"geekblue\" key={isActive}>\r\n                            HOẠT ĐỘNG\r\n                        </Tag> : <Tag color=\"green\" key={isActive}>\r\n                                KHÔNG HOẠT ĐỘNG\r\n                        </Tag>\r\n                    }\r\n\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: '',\r\n            dataIndex: 'isActive',\r\n            key: 'id',\r\n            render: (isActive: any, id: any) => (\r\n                <Space size=\"middle\">\r\n                    {\r\n                        isActive === true ?\r\n                            <Popconfirm\r\n                                title=\"Bạn có muốn thực hiện không?\"\r\n                                onConfirm={() => handleUnApprove(id.id)}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n\r\n                                <a style={{ marginTop: 10, cursor: \"pointer\" }}\r\n                                >Khóa</a>\r\n                            </Popconfirm>\r\n                            : \"\"\r\n                    }\r\n\r\n                </Space>\r\n            ),\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    //get toàn bộ data khách hàng\r\n    const fetchCustomer = async (page: any, size: any) => {\r\n        try {\r\n            const pageformat = {\r\n                page: page,\r\n                size: size\r\n            }\r\n            await adminApi.getAllCustomer(pageformat).then((temp) => {\r\n                let a = temp.data.content;\r\n                setCustomer(a.filter(function (res: any) {\r\n                    return res.isActive === true;\r\n                }));\r\n            });\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    const handleApprove = async (id: string) => {\r\n        try {\r\n            const response = await adminApi.ChangeStatusCustomer(id);\r\n            fetchCustomer(1, 1000);\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    const handleUnApprove = async (id: string) => {\r\n        try {\r\n            const response = await adminApi.ChangeStatusCustomer(id).then(response => {\r\n                console.log(response)\r\n                if (response === undefined) {\r\n                    notification[\"error\"]({\r\n                        message: \"Thông báo\",\r\n                        description: \"Không thành công\",\r\n\r\n                    });\r\n                }\r\n                else {\r\n                    notification[\"success\"]({\r\n                        message: \"Thông báo\",\r\n                        description: \"Thành công\",\r\n                    });\r\n                }\r\n            }\r\n            );;\r\n            fetchCustomer(1, 1000);\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    const onSearchByAddress = async (value: string) => {\r\n        console.log(\"input\" + value);\r\n        if (value === '') {\r\n            fetchCustomer(1, 1000);\r\n        } else {\r\n            try {\r\n                const pageformat = {\r\n                    page: 1,\r\n                    size: 1000\r\n                }\r\n                const response = await adminApi.getAllCustomerByAddress(value, pageformat).then((temp) => {\r\n                    let a = temp.data.content;\r\n                    setCustomer(a.filter(function (res: any) {\r\n                        return res.isActive === true;\r\n                    }))});\r\n            } catch (error) {\r\n                throw error;\r\n            }\r\n            console.log(value);\r\n        }\r\n    }\r\n\r\n    const onSearchByName = async (value: string) => {\r\n        console.log(\"input\" + value);\r\n        if (value === '') {\r\n            fetchCustomer(1, 1000);\r\n        } else {\r\n            try {\r\n                const pageformat = {\r\n                    page: 1,\r\n                    size: 1000\r\n                }\r\n                const response = await adminApi.getAllCustomerByName(value, pageformat).then((temp) => {\r\n                    let a = temp.data.content;\r\n                    setCustomer(a.filter(function (res: any) {\r\n                        return res.isActive === true;\r\n                    }))});\r\n            } catch (error) {\r\n                throw error;\r\n            }\r\n            console.log(value);\r\n        }\r\n    }\r\n\r\n    const onChangeDate = async (date: any, dateString: any) => {\r\n        if (dateString === '') {\r\n            fetchCustomer(1, 1000);\r\n        } else {\r\n            try {\r\n                const pageformat = {\r\n                    page: 1,\r\n                    size: 1000\r\n                }\r\n                const response = await adminApi.getAllCustomerByCreateDate(dateString, pageformat).then((temp) => {\r\n                    let a = temp.data.content;\r\n                    setCustomer(a.filter(function (res: any) {\r\n                        return res.isActive === true;\r\n                    }))});\r\n            } catch (error) {\r\n                throw error;\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchCustomer(1, 1000);\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div id={styles.dialog}>\r\n                <PageHeader\r\n                    title=\"\"\r\n                    subTitle=\"\"\r\n\r\n                >\r\n                    <Search\r\n                        placeholder=\"Tìm kiếm theo tên\"\r\n                        allowClear\r\n                        onSearch={onSearchByName}\r\n                        style={{ width: 400, marginBottom: 10 }}\r\n                    />\r\n\r\n                    <Search\r\n                        placeholder=\"Tìm kiếm theo địa chỉ\"\r\n                        allowClear\r\n                        onSearch={onSearchByAddress}\r\n                        style={{ width: 400, marginBottom: 10, marginLeft: 20 }}\r\n                    />\r\n                    \r\n                    <DatePicker\r\n                        placeholder=\"Chọn ngày tạo\"\r\n                        onChange={onChangeDate}\r\n                        allowClear\r\n                        style={{ width: 400, marginBottom: 10, marginLeft: 20 }}\r\n                    />\r\n                </PageHeader>\r\n            </div>\r\n            <div id={styles.container}>\r\n                <Card title=\"Quản Lý Khách Hàng\" bordered={false} >\r\n                    <Table columns={columns} dataSource={customer} pagination={{\r\n                        onChange(current) {\r\n                            setPage(current);\r\n                        }\r\n                    }} />\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Customer;","F:\\FE\\food-fe\\food-admin\\src\\components\\PrivateRoute.tsx",[],["166","167"],"F:\\FE\\food-fe\\food-admin\\src\\utils\\dateTime.tsx",[],"F:\\FE\\food-fe\\food-admin\\src\\components\\PublicRoute.tsx",[],"F:\\FE\\food-fe\\food-admin\\src\\api\\authApi.ts",[],"F:\\FE\\food-fe\\food-admin\\src\\page\\account\\register\\mainRegister.tsx",["168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187"],"import React, { useState, useEffect } from \"react\";\r\nimport styles from \"../register/mainRegister.module.scss\";\r\nimport { DatePicker, Input } from 'antd';\r\nimport { Card, Table, Space, Tag, PageHeader, Divider, Form, Button, notification, Row, Col } from 'antd';\r\nimport { UserOutlined, LockOutlined, PhoneOutlined, MailOutlined, AimOutlined, MoneyCollectOutlined } from '@ant-design/icons';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axiosClient from \"../../../api/axiosClient\";\r\nimport delivery from \"../../../assets/image/delivery.png\";\r\nimport restaurant from \"../../../assets/image/restaurant.jpg\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst MainRegister = () => {\r\n\r\n    let history = useHistory();\r\n\r\n    const handleRestaurant = async (values: any) => {\r\n        history.push(\"/register-restaurant\")\r\n    }\r\n    const handleDelivery = async (values: any) => {\r\n        history.push(\"/register-delivery\")\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={styles.imageBackground}>\r\n                <div id={styles.wrapper} >\r\n                    <Card id={styles.dialog} bordered={false} >\r\n                        <Divider style={{ marginBottom: 5, fontSize: 19 }} orientation=\"center\">Food Good management</Divider>\r\n                        <p className={styles.text}>Vui lòng lựa chọn tài khoản đăng kí</p>\r\n                        <Row>\r\n                            <Col span={12} onClick={handleRestaurant} style={{cursor: \"pointer\"}}>\r\n                                <img src={restaurant} style={{width: 200, height: 200}}></img>\r\n                                <p className={styles.text}>Tài khoản nhà hàng</p>\r\n                            </Col>\r\n                            <Col span={12} onClick={handleDelivery} style={{cursor: \"pointer\"}}>\r\n                                <img src={delivery} style={{width: 200, height: 200}}></img>\r\n                                <p className={styles.text}>Tài khoản giao hàng</p>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainRegister;","F:\\FE\\food-fe\\food-admin\\src\\page\\account\\register\\registerDelivery\\registerDelivery.tsx",["188","189","190","191","192","193","194","195","196","197"],"F:\\FE\\food-fe\\food-admin\\src\\api\\adminApi.ts",["198"],"F:\\FE\\food-fe\\food-admin\\src\\page\\account\\register\\registerRestaurant\\registerRestaurant.tsx",["199","200","201","202","203","204"],"F:\\FE\\food-fe\\food-admin\\src\\page\\headerDropdown\\DropdownAvatar.tsx",["205","206","207"],"F:\\FE\\food-fe\\food-admin\\src\\page\\store\\orderManagement\\orderManagement.tsx",["208","209","210","211","212"],"F:\\FE\\food-fe\\food-admin\\src\\page\\delivery\\delivery.tsx",["213","214","215","216","217","218"],"import React, { useState, useEffect } from \"react\";\r\nimport styles from \"../customer/customer.module.scss\";\r\nimport adminApi from \"../../api/adminApi\";\r\nimport { DatePicker, Input, notification, Popconfirm } from 'antd';\r\nimport { Card, Table, Space, Tag, PageHeader } from 'antd';\r\nimport axios from \"axios\";\r\nimport axiosClient from \"../../api/axiosClient\";\r\n\r\nconst { Search } = Input;\r\n\r\n\r\n\r\nconst Delivery = () => {\r\n\r\n    const [delivery, setDelivery] = useState<any>([]);\r\n    const [page, setPage] = useState<any>(1);\r\n\r\n    const columns = [\r\n        {\r\n            title: 'STT',\r\n            dataIndex: 'id',\r\n            key: 'index',\r\n            render: (value: any, item: any, index: any) => (\r\n                (page - 1) * 10 + (index + 1)\r\n            ),\r\n        },\r\n        {\r\n            title: 'Họ Và Tên',\r\n            dataIndex: 'name',\r\n            key: 'name'\r\n        },\r\n        {\r\n            title: 'Số Điện Thoại',\r\n            dataIndex: 'phoneNo',\r\n            key: 'phoneNo',\r\n        },\r\n        {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n            key: 'email',\r\n        },\r\n        {\r\n            title: 'Địa Chỉ',\r\n            dataIndex: 'address',\r\n            key: 'address',\r\n        },\r\n        {\r\n            title: 'Ngày Tạo',\r\n            dataIndex: 'createDate',\r\n            key: 'createDate',\r\n        },\r\n        {\r\n            title: 'Tài Khoản',\r\n            dataIndex: 'isActive',\r\n            key: 'isActive',\r\n            render: (isActive: any) => (\r\n                <Space size=\"middle\">\r\n                    {\r\n                        isActive === true ? <Tag color=\"geekblue\" key={isActive}>\r\n                            HOẠT ĐỘNG\r\n                    </Tag> : <Tag color=\"green\" key={isActive}>\r\n                                KHÔNG HOẠT ĐỘNG\r\n                    </Tag>\r\n                    }\r\n\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: 'Trạng thái',\r\n            dataIndex: 'isBusy',\r\n            key: 'isBusy',\r\n            render: (isBusy: any) => (\r\n                <Space size=\"middle\">\r\n                    {\r\n                        isBusy === true ? <Tag color=\"warning\" key={isBusy}>\r\n                            ĐANG BẬN\r\n                    </Tag> : <Tag color=\"success\" key={isBusy}>\r\n                                KHÔNG BẬN\r\n                    </Tag>\r\n                    }\r\n\r\n                </Space>\r\n            ),\r\n        },\r\n        {\r\n            title: '',\r\n            dataIndex: 'isActive',\r\n            key: 'id',\r\n            render: (isActive: any, id: any) => (\r\n                <Space size=\"middle\">\r\n                    {\r\n                        <Space size=\"middle\">\r\n                            {\r\n                                isActive === true ?\r\n                                    <Popconfirm\r\n                                        title=\"Bạn có muốn thực hiện không?\"\r\n                                        onConfirm={() => handleUnApprove(id.id)}\r\n                                        okText=\"Yes\"\r\n                                        cancelText=\"No\"\r\n                                    >\r\n\r\n                                        <a style={{ marginTop: 10, cursor: \"pointer\" }}\r\n                                        >Khóa</a>\r\n                                    </Popconfirm>\r\n                                    : \"\"\r\n                            }\r\n                        </Space>\r\n                    }\r\n\r\n                </Space>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const handleUnApprove = async (id: string) => {\r\n        console.log(\"data\" + id);\r\n        let email = localStorage.getItem(\"email\");\r\n        const dataUser = await adminApi.getProfileAdmin(email);\r\n        console.log(dataUser.data.id);\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            await axiosClient.put(\"http://localhost:8085/admins/deliveryguys/changeStatus/\" + id).then(response => {\r\n                console.log(response)\r\n                if (response === undefined) {\r\n                    notification[\"error\"]({\r\n                        message: \"Thông báo\",\r\n                        description: \"Không thành công\",\r\n\r\n                    });\r\n                }\r\n                else {\r\n                    notification[\"success\"]({\r\n                        message: \"Thông báo\",\r\n                        description: \"Thành công\",\r\n                    });\r\n                    fetchRestauranst(1,1000);\r\n                }\r\n            }\r\n            );\r\n            fetchRestauranst(1, 1000);\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n\r\n    //get toàn bộ data nhà hàng\r\n    const fetchRestauranst = async (page: any, size: any) => {\r\n        try {\r\n            const pageformat = {\r\n                page: page,\r\n                size: size\r\n            }\r\n            await adminApi.getAllDelivery(pageformat).then((temp) => {\r\n                console.log(temp);\r\n                let a = temp.data.content;\r\n                setDelivery(a.filter(function (res: any) {\r\n                    return res.isActive === true;\r\n                }));\r\n            });;;\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    const onSearch = async (value: string) => {\r\n        console.log(\"input\" + value);\r\n        if (value === '') {\r\n            fetchRestauranst(1, 1000);\r\n        } else {\r\n            try {\r\n                const pageformat = {\r\n                    page: 1,\r\n                    size: 1000\r\n                }\r\n                const response = await adminApi.getAllCustomerByAddress(value, pageformat).then((temp) => {\r\n                    console.log(temp);\r\n                    let a = temp.data.content;\r\n                    setDelivery(a.filter(function (res: any) {\r\n                        return res.isActive === true;\r\n                    }));\r\n                });;;\r\n            } catch (error) {\r\n                throw error;\r\n            }\r\n            console.log(value);\r\n        }\r\n    }\r\n\r\n    const onChangeDate = async (date: any, dateString: any) => {\r\n        if (dateString === '') {\r\n            fetchRestauranst(1, 1000);\r\n        } else {\r\n            try {\r\n                const pageformat = {\r\n                    page: 1,\r\n                    size: 1000\r\n                }\r\n                const response = await adminApi.getAllDeliveryByCreateDate(dateString, pageformat).then((temp) => {\r\n                    console.log(temp);\r\n                    let a = temp.data.content;\r\n                    setDelivery(a.filter(function (res: any) {\r\n                        return res.isActive === true;\r\n                    }));\r\n                });;;\r\n            } catch (error) {\r\n                throw error;\r\n            }\r\n        }\r\n    }\r\n\r\n    const onSearchByName = async (value: string) => {\r\n        console.log(\"input\" + value);\r\n        if (value === '') {\r\n            fetchRestauranst(1, 1000);\r\n        } else {\r\n            try {\r\n                const pageformat = {\r\n                    page: 1,\r\n                    size: 1000\r\n                }\r\n                const response = await adminApi.getAllDeliveryByName(value, pageformat).then((temp) => {\r\n                    console.log(temp);\r\n                    let a = temp.data.content;\r\n                    setDelivery(a.filter(function (res: any) {\r\n                        return res.isActive === true;\r\n                    }));\r\n                });;;\r\n            } catch (error) {\r\n                throw error;\r\n            }\r\n            console.log(value);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchRestauranst(1, 1000);\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div id={styles.dialog}>\r\n                <PageHeader\r\n                    title=\"\"\r\n                    subTitle=\"\"\r\n\r\n                >\r\n                    <Search\r\n                        placeholder=\"Nhập tên người vận chuyển\"\r\n                        allowClear\r\n                        onSearch={onSearchByName}\r\n                        style={{ width: 400, marginBottom: 10, marginRight: 20 }}\r\n                    />\r\n\r\n                    <Search\r\n                        placeholder=\"Nhập địa chỉ\"\r\n                        allowClear\r\n                        onSearch={onSearch}\r\n                        style={{ width: 400, marginBottom: 10 }}\r\n                    />\r\n\r\n                    <DatePicker\r\n                        placeholder=\"Chọn ngày tạo\"\r\n                        onChange={onChangeDate}\r\n                        allowClear\r\n                        style={{ width: 400, marginBottom: 10, marginLeft: 20 }}\r\n                    />\r\n                </PageHeader>\r\n            </div>\r\n            <div id={styles.container}>\r\n                <Card title=\"Quản Lý Vận Chuyển\" bordered={false} >\r\n                    <Table columns={columns} dataSource={delivery} pagination={{\r\n                        onChange(current) {\r\n                            setPage(current);\r\n                        }\r\n                    }} />\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Delivery;","F:\\FE\\food-fe\\food-admin\\src\\api\\axiosClient.ts",[],"F:\\FE\\food-fe\\food-admin\\src\\page\\admin\\admin.tsx",["219","220","221","222","223","224","225"],"F:\\FE\\food-fe\\food-admin\\src\\page\\customerBlock\\customerBlock.tsx",["226","227","228","229","230","231","232","233"],"F:\\FE\\food-fe\\food-admin\\src\\page\\managementCategory\\Category.tsx",["234","235","236","237","238"],{"ruleId":"239","replacedBy":"240"},{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","severity":1,"message":"244","line":1,"column":17,"nodeType":"245","messageId":"246","endLine":1,"endColumn":26},{"ruleId":"243","severity":1,"message":"247","line":1,"column":28,"nodeType":"245","messageId":"246","endLine":1,"endColumn":36},{"ruleId":"243","severity":1,"message":"248","line":2,"column":18,"nodeType":"245","messageId":"246","endLine":2,"endColumn":24},{"ruleId":"243","severity":1,"message":"249","line":2,"column":26,"nodeType":"245","messageId":"246","endLine":2,"endColumn":34},{"ruleId":"243","severity":1,"message":"250","line":2,"column":36,"nodeType":"245","messageId":"246","endLine":2,"endColumn":40},{"ruleId":"243","severity":1,"message":"251","line":2,"column":42,"nodeType":"245","messageId":"246","endLine":2,"endColumn":47},{"ruleId":"243","severity":1,"message":"252","line":3,"column":10,"nodeType":"245","messageId":"246","endLine":3,"endColumn":29},{"ruleId":"243","severity":1,"message":"253","line":3,"column":31,"nodeType":"245","messageId":"246","endLine":3,"endColumn":43},{"ruleId":"243","severity":1,"message":"254","line":7,"column":8,"nodeType":"245","messageId":"246","endLine":7,"endColumn":16},{"ruleId":"255","severity":1,"message":"256","line":24,"column":19,"nodeType":"257","endLine":24,"endColumn":31},{"ruleId":"239","replacedBy":"258"},{"ruleId":"241","replacedBy":"259"},{"ruleId":"243","severity":1,"message":"260","line":4,"column":10,"nodeType":"245","messageId":"246","endLine":4,"endColumn":23},{"ruleId":"243","severity":1,"message":"261","line":6,"column":30,"nodeType":"245","messageId":"246","endLine":6,"endColumn":33},{"ruleId":"243","severity":1,"message":"262","line":6,"column":47,"nodeType":"245","messageId":"246","endLine":6,"endColumn":53},{"ruleId":"243","severity":1,"message":"263","line":9,"column":9,"nodeType":"245","messageId":"246","endLine":9,"endColumn":15},{"ruleId":"243","severity":1,"message":"264","line":14,"column":12,"nodeType":"245","messageId":"246","endLine":14,"endColumn":20},{"ruleId":"243","severity":1,"message":"265","line":189,"column":11,"nodeType":"245","messageId":"246","endLine":189,"endColumn":28},{"ruleId":"239","replacedBy":"266"},{"ruleId":"241","replacedBy":"267"},{"ruleId":"243","severity":1,"message":"268","line":8,"column":8,"nodeType":"245","messageId":"246","endLine":8,"endColumn":14},{"ruleId":"243","severity":1,"message":"269","line":10,"column":10,"nodeType":"245","messageId":"246","endLine":10,"endColumn":18},{"ruleId":"243","severity":1,"message":"270","line":22,"column":9,"nodeType":"245","messageId":"246","endLine":22,"endColumn":25},{"ruleId":"243","severity":1,"message":"271","line":55,"column":9,"nodeType":"245","messageId":"246","endLine":55,"endColumn":25},{"ruleId":"243","severity":1,"message":"272","line":64,"column":9,"nodeType":"245","messageId":"246","endLine":64,"endColumn":23},{"ruleId":"273","severity":1,"message":"274","line":84,"column":3,"nodeType":"245","endLine":84,"endColumn":12,"suggestions":"275"},{"ruleId":"239","replacedBy":"276"},{"ruleId":"241","replacedBy":"277"},{"ruleId":"239","replacedBy":"278"},{"ruleId":"241","replacedBy":"279"},{"ruleId":"243","severity":1,"message":"260","line":4,"column":10,"nodeType":"245","messageId":"246","endLine":4,"endColumn":23},{"ruleId":"243","severity":1,"message":"280","line":5,"column":10,"nodeType":"245","messageId":"246","endLine":5,"endColumn":20},{"ruleId":"243","severity":1,"message":"261","line":6,"column":30,"nodeType":"245","messageId":"246","endLine":6,"endColumn":33},{"ruleId":"243","severity":1,"message":"262","line":6,"column":61,"nodeType":"245","messageId":"246","endLine":6,"endColumn":67},{"ruleId":"243","severity":1,"message":"281","line":6,"column":80,"nodeType":"245","messageId":"246","endLine":6,"endColumn":83},{"ruleId":"282","severity":1,"message":"283","line":41,"column":37,"nodeType":"257","endLine":41,"endColumn":90},{"ruleId":"243","severity":1,"message":"284","line":134,"column":19,"nodeType":"245","messageId":"246","endLine":134,"endColumn":29},{"ruleId":"243","severity":1,"message":"285","line":245,"column":19,"nodeType":"245","messageId":"246","endLine":245,"endColumn":25},{"ruleId":"239","replacedBy":"286"},{"ruleId":"241","replacedBy":"287"},{"ruleId":"243","severity":1,"message":"262","line":5,"column":47,"nodeType":"245","messageId":"246","endLine":5,"endColumn":53},{"ruleId":"255","severity":1,"message":"288","line":80,"column":33,"nodeType":"257","endLine":81,"endColumn":34},{"ruleId":"243","severity":1,"message":"289","line":111,"column":11,"nodeType":"245","messageId":"246","endLine":111,"endColumn":24},{"ruleId":"243","severity":1,"message":"290","line":113,"column":19,"nodeType":"245","messageId":"246","endLine":113,"endColumn":27},{"ruleId":"243","severity":1,"message":"290","line":122,"column":19,"nodeType":"245","messageId":"246","endLine":122,"endColumn":27},{"ruleId":"243","severity":1,"message":"290","line":155,"column":23,"nodeType":"245","messageId":"246","endLine":155,"endColumn":31},{"ruleId":"243","severity":1,"message":"290","line":177,"column":23,"nodeType":"245","messageId":"246","endLine":177,"endColumn":31},{"ruleId":"243","severity":1,"message":"290","line":198,"column":23,"nodeType":"245","messageId":"246","endLine":198,"endColumn":31},{"ruleId":"239","replacedBy":"291"},{"ruleId":"241","replacedBy":"292"},{"ruleId":"243","severity":1,"message":"247","line":1,"column":17,"nodeType":"245","messageId":"246","endLine":1,"endColumn":25},{"ruleId":"243","severity":1,"message":"244","line":1,"column":27,"nodeType":"245","messageId":"246","endLine":1,"endColumn":36},{"ruleId":"243","severity":1,"message":"280","line":3,"column":10,"nodeType":"245","messageId":"246","endLine":3,"endColumn":20},{"ruleId":"243","severity":1,"message":"293","line":4,"column":16,"nodeType":"245","messageId":"246","endLine":4,"endColumn":21},{"ruleId":"243","severity":1,"message":"294","line":4,"column":23,"nodeType":"245","messageId":"246","endLine":4,"endColumn":28},{"ruleId":"243","severity":1,"message":"261","line":4,"column":30,"nodeType":"245","messageId":"246","endLine":4,"endColumn":33},{"ruleId":"243","severity":1,"message":"295","line":4,"column":35,"nodeType":"245","messageId":"246","endLine":4,"endColumn":45},{"ruleId":"243","severity":1,"message":"296","line":4,"column":56,"nodeType":"245","messageId":"246","endLine":4,"endColumn":60},{"ruleId":"243","severity":1,"message":"297","line":4,"column":62,"nodeType":"245","messageId":"246","endLine":4,"endColumn":68},{"ruleId":"243","severity":1,"message":"298","line":4,"column":70,"nodeType":"245","messageId":"246","endLine":4,"endColumn":82},{"ruleId":"243","severity":1,"message":"299","line":5,"column":10,"nodeType":"245","messageId":"246","endLine":5,"endColumn":22},{"ruleId":"243","severity":1,"message":"300","line":5,"column":24,"nodeType":"245","messageId":"246","endLine":5,"endColumn":36},{"ruleId":"243","severity":1,"message":"301","line":5,"column":38,"nodeType":"245","messageId":"246","endLine":5,"endColumn":51},{"ruleId":"243","severity":1,"message":"302","line":5,"column":53,"nodeType":"245","messageId":"246","endLine":5,"endColumn":65},{"ruleId":"243","severity":1,"message":"303","line":5,"column":67,"nodeType":"245","messageId":"246","endLine":5,"endColumn":78},{"ruleId":"243","severity":1,"message":"304","line":5,"column":80,"nodeType":"245","messageId":"246","endLine":5,"endColumn":100},{"ruleId":"243","severity":1,"message":"305","line":7,"column":8,"nodeType":"245","messageId":"246","endLine":7,"endColumn":19},{"ruleId":"243","severity":1,"message":"263","line":11,"column":9,"nodeType":"245","messageId":"246","endLine":11,"endColumn":15},{"ruleId":"282","severity":1,"message":"283","line":32,"column":33,"nodeType":"257","endLine":32,"endColumn":89},{"ruleId":"282","severity":1,"message":"283","line":36,"column":33,"nodeType":"257","endLine":36,"endColumn":87},{"ruleId":"243","severity":1,"message":"244","line":1,"column":27,"nodeType":"245","messageId":"246","endLine":1,"endColumn":36},{"ruleId":"243","severity":1,"message":"280","line":3,"column":10,"nodeType":"245","messageId":"246","endLine":3,"endColumn":20},{"ruleId":"243","severity":1,"message":"293","line":4,"column":16,"nodeType":"245","messageId":"246","endLine":4,"endColumn":21},{"ruleId":"243","severity":1,"message":"294","line":4,"column":23,"nodeType":"245","messageId":"246","endLine":4,"endColumn":28},{"ruleId":"243","severity":1,"message":"261","line":4,"column":30,"nodeType":"245","messageId":"246","endLine":4,"endColumn":33},{"ruleId":"243","severity":1,"message":"295","line":4,"column":35,"nodeType":"245","messageId":"246","endLine":4,"endColumn":45},{"ruleId":"243","severity":1,"message":"304","line":5,"column":80,"nodeType":"245","messageId":"246","endLine":5,"endColumn":100},{"ruleId":"243","severity":1,"message":"263","line":9,"column":9,"nodeType":"245","messageId":"246","endLine":9,"endColumn":15},{"ruleId":"243","severity":1,"message":"306","line":13,"column":12,"nodeType":"245","messageId":"246","endLine":13,"endColumn":20},{"ruleId":"243","severity":1,"message":"307","line":13,"column":22,"nodeType":"245","messageId":"246","endLine":13,"endColumn":33},{"ruleId":"243","severity":1,"message":"308","line":1,"column":10,"nodeType":"245","messageId":"246","endLine":1,"endColumn":31},{"ruleId":"243","severity":1,"message":"280","line":3,"column":10,"nodeType":"245","messageId":"246","endLine":3,"endColumn":20},{"ruleId":"243","severity":1,"message":"293","line":4,"column":16,"nodeType":"245","messageId":"246","endLine":4,"endColumn":21},{"ruleId":"243","severity":1,"message":"294","line":4,"column":23,"nodeType":"245","messageId":"246","endLine":4,"endColumn":28},{"ruleId":"243","severity":1,"message":"261","line":4,"column":30,"nodeType":"245","messageId":"246","endLine":4,"endColumn":33},{"ruleId":"243","severity":1,"message":"295","line":4,"column":35,"nodeType":"245","messageId":"246","endLine":4,"endColumn":45},{"ruleId":"243","severity":1,"message":"309","line":5,"column":102,"nodeType":"245","messageId":"246","endLine":5,"endColumn":118},{"ruleId":"255","severity":1,"message":"288","line":62,"column":9,"nodeType":"257","endLine":62,"endColumn":95},{"ruleId":"255","severity":1,"message":"288","line":67,"column":9,"nodeType":"257","endLine":67,"endColumn":55},{"ruleId":"255","severity":1,"message":"288","line":72,"column":9,"nodeType":"257","endLine":72,"endColumn":55},{"ruleId":"243","severity":1,"message":"260","line":4,"column":10,"nodeType":"245","messageId":"246","endLine":4,"endColumn":23},{"ruleId":"243","severity":1,"message":"261","line":6,"column":30,"nodeType":"245","messageId":"246","endLine":6,"endColumn":33},{"ruleId":"243","severity":1,"message":"262","line":6,"column":47,"nodeType":"245","messageId":"246","endLine":6,"endColumn":53},{"ruleId":"243","severity":1,"message":"305","line":7,"column":8,"nodeType":"245","messageId":"246","endLine":7,"endColumn":19},{"ruleId":"243","severity":1,"message":"263","line":10,"column":9,"nodeType":"245","messageId":"246","endLine":10,"endColumn":15},{"ruleId":"243","severity":1,"message":"310","line":6,"column":8,"nodeType":"245","messageId":"246","endLine":6,"endColumn":13},{"ruleId":"255","severity":1,"message":"288","line":103,"column":41,"nodeType":"257","endLine":104,"endColumn":42},{"ruleId":"243","severity":1,"message":"311","line":122,"column":19,"nodeType":"245","messageId":"246","endLine":122,"endColumn":24},{"ruleId":"243","severity":1,"message":"290","line":177,"column":23,"nodeType":"245","messageId":"246","endLine":177,"endColumn":31},{"ruleId":"243","severity":1,"message":"290","line":200,"column":23,"nodeType":"245","messageId":"246","endLine":200,"endColumn":31},{"ruleId":"243","severity":1,"message":"290","line":223,"column":23,"nodeType":"245","messageId":"246","endLine":223,"endColumn":31},{"ruleId":"243","severity":1,"message":"280","line":4,"column":10,"nodeType":"245","messageId":"246","endLine":4,"endColumn":20},{"ruleId":"243","severity":1,"message":"262","line":6,"column":48,"nodeType":"245","messageId":"246","endLine":6,"endColumn":54},{"ruleId":"243","severity":1,"message":"281","line":7,"column":53,"nodeType":"245","messageId":"246","endLine":7,"endColumn":56},{"ruleId":"255","severity":1,"message":"288","line":85,"column":30,"nodeType":"257","endLine":86,"endColumn":31},{"ruleId":"243","severity":1,"message":"289","line":121,"column":11,"nodeType":"245","messageId":"246","endLine":121,"endColumn":24},{"ruleId":"243","severity":1,"message":"265","line":155,"column":11,"nodeType":"245","messageId":"246","endLine":155,"endColumn":28},{"ruleId":"243","severity":1,"message":"290","line":185,"column":23,"nodeType":"245","messageId":"246","endLine":185,"endColumn":31},{"ruleId":"243","severity":1,"message":"262","line":5,"column":47,"nodeType":"245","messageId":"246","endLine":5,"endColumn":53},{"ruleId":"255","severity":1,"message":"288","line":80,"column":33,"nodeType":"257","endLine":81,"endColumn":34},{"ruleId":"243","severity":1,"message":"290","line":113,"column":19,"nodeType":"245","messageId":"246","endLine":113,"endColumn":27},{"ruleId":"243","severity":1,"message":"312","line":136,"column":11,"nodeType":"245","messageId":"246","endLine":136,"endColumn":26},{"ruleId":"243","severity":1,"message":"290","line":138,"column":19,"nodeType":"245","messageId":"246","endLine":138,"endColumn":27},{"ruleId":"243","severity":1,"message":"290","line":155,"column":23,"nodeType":"245","messageId":"246","endLine":155,"endColumn":31},{"ruleId":"243","severity":1,"message":"290","line":177,"column":23,"nodeType":"245","messageId":"246","endLine":177,"endColumn":31},{"ruleId":"243","severity":1,"message":"290","line":198,"column":23,"nodeType":"245","messageId":"246","endLine":198,"endColumn":31},{"ruleId":"243","severity":1,"message":"280","line":4,"column":10,"nodeType":"245","messageId":"246","endLine":4,"endColumn":20},{"ruleId":"243","severity":1,"message":"261","line":5,"column":38,"nodeType":"245","messageId":"246","endLine":5,"endColumn":41},{"ruleId":"243","severity":1,"message":"262","line":5,"column":55,"nodeType":"245","messageId":"246","endLine":5,"endColumn":61},{"ruleId":"243","severity":1,"message":"281","line":5,"column":89,"nodeType":"245","messageId":"246","endLine":5,"endColumn":92},{"ruleId":"243","severity":1,"message":"313","line":10,"column":9,"nodeType":"245","messageId":"246","endLine":10,"endColumn":15},"no-native-reassign",["314"],"no-negated-in-lhs",["315"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Avatar' is defined but never used.","'Dropdown' is defined but never used.","'Menu' is defined but never used.","'Badge' is defined but never used.","'TranslationOutlined' is defined but never used.","'BellOutlined' is defined but never used.","'adminApi' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["314"],["315"],"'AudioOutlined' is defined but never used.","'Tag' is defined but never used.","'Switch' is defined but never used.","'Search' is assigned a value but never used.","'userData' is assigned a value but never used.","'onSearchByAddress' is assigned a value but never used.",["314"],["315"],"'styles' is defined but never used.","'parseJwt' is defined but never used.","'menuSidebarAdmin' is assigned a value but never used.","'menuDeliveryGuys' is assigned a value but never used.","'menuRestaurant' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setRoles'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["316"],["314"],["315"],["314"],["315"],"'DatePicker' is defined but never used.","'Col' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'formatData' is assigned a value but never used.","'jsonfy' is assigned a value but never used.",["314"],["315"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'handleApprove' is assigned a value but never used.","'response' is assigned a value but never used.",["314"],["315"],"'Table' is defined but never used.","'Space' is defined but never used.","'PageHeader' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'notification' is defined but never used.","'UserOutlined' is defined but never used.","'LockOutlined' is defined but never used.","'PhoneOutlined' is defined but never used.","'MailOutlined' is defined but never used.","'AimOutlined' is defined but never used.","'MoneyCollectOutlined' is defined but never used.","'axiosClient' is defined but never used.","'delivery' is assigned a value but never used.","'setDelivery' is assigned a value but never used.","'moveSyntheticComments' is defined but never used.","'CarryOutOutlined' is defined but never used.","'axios' is defined but never used.","'token' is assigned a value but never used.","'handleUnApprove' is assigned a value but never used.","'Option' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"317","fix":"318"},"Add dependencies array: []",{"range":"319","text":"320"},[2062,2062],", []"]